/*******************************************************************************
 * Copyright (c) 2011 itemis AG (http://www.itemis.eu) and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *******************************************************************************/
package org.jnario

import org.jnario.spec.tests.documentation.*
import org.jnario.feature.documentation.*
import org.jnario.suite.documentation.*
import org.jnario.jnario.tests.unit.jnario.*
import org.jnario.spec.tests.integration.*
import org.jnario.feature.tests.integration.*
import org.jnario.jnario.tests.integration.*
import org.jnario.feature.tests.unit.linking.*
import org.jnario.jnario.documentation.*
import spec.tests.integration.*
import org.jnario.spec.tests.integration.*

#Jnario Documentation

##Installation

	- "Installing Jnario": how to install Jnario.

##Getting Started

Learn how to write specifications in Jnario. 
	- "Introducing Jnario Features":  how to write cucumber\-style executables 
	     acceptance specifications.
	- "Introducing Jnario Specs":  how to write specifications.
	- "Introducing Jnario Suites":  Orchestrate and document the execution of 
	     your specs and features.
	- "20 Facts about Xtend":  all you need to know about Xtend to effectively 
	     use Jnario.
	- "Generating Reports": generating beautiful reports
	 
##Common Concepts

Features and concepts that are common to all Jnario languages. 

	- "Extension Library":  helpful extension methods provided by Jnario.
	- "Using Should":  writing expressive assertions with the build in 
	     should operator.
	- "Customizing the Spec Creation":  how to customize the spec 
	     creation process.
	- "Using Xtend\'s with Operator":  how to define nested assertions.
	
	
	
##Features

More about writing acceptance specifications in Jnario.

	- "Setup & Teardown with Feature Extensions": define setup and teardown operations in Features.
	- "Using JUnit Rules in Features" 
	- "Referencing other Steps": more facts about referencing other steps.

##Specs

More about writing specifications in Jnario.

	- "Spec Extensions": reuse setup and teardown operations in different specs.
 	- "Implicit Subject": let Jnario automatically create the spec's subject for you.
	- "Using Tables":  define test data sets in tables.
	- "Using JUnit Rules in Specs"
	
## Support

The best place to ask questions about Jnario is the [mailing list](https://groups.google.com/forum/?fromgroups\#!forum/jnario). You can file bug reports or feature requests at [Github](https://github.com/sebastianbenz/Jnario/issues).
	

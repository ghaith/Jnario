<project default="run">
	<!--
	 1. Where to get eclipse bundles  = eclipsePluginFolder
	 2. Where to get xtext bundles  = xtextPluginFolder
	 3. standalone jar Version to use = maven.version
	 3. Where to put output = output.folder
	-->
	<property name="jnarioPluginFolder" value="../../releng/org.jnario.updatesite/target/repository/plugins" />
	<property name="pegdownFolder" value="../org.jnario/lib" />
	<property name="output.folder" value="target" />
	<echo>${maven.version}</echo>

	<property name="binJarTemp" value="binJarTemp" />
	<property name="sourceJarTemp" value="sourceJarTemp" />

	<target name="run" depends="clean,createSourcesUberjar">
<!--		<loadfile property="modifiedPomXml" srcFile="pom-template.pom">
			<filterchain>
				<expandproperties />
			</filterchain>
		</loadfile>
		<echo file="${output.folder}/org.jnario.standalone-${maven.version}.pom">${modifiedPomXml}</echo>
		<echo>Pom stored: ${output.folder}/org.jnario.standalone-${maven.version}.pom</echo> -->
	</target>

	<!-- - - - - - - - - - - - - - - - - - 
          target: clean                      
         - - - - - - - - - - - - - - - - - -->
	<target name="clean">
		<delete failonerror="false">
			<fileset dir="${output.folder}">
				<include name="**" />
			</fileset>
			<fileset dir="${binJarTemp}">
				<include name="**" />
			</fileset>
			<fileset dir="${sourceJarTemp}">
				<include name="**" />
			</fileset>
		</delete>
	</target>

	<!-- ================================= 
          target: createUberjar    Binary           
         ================================= -->
	<target name="createUberjar">
		<mkdir dir="${output.folder}" />
		<mkdir dir="${binJarTemp}/" />
		<mkdir dir="${sourceJarTemp}" />
		
	  <!-- Pegdown bundles -->
	  <fileset dir="${pegdownFolder}" id="pegdownJars">
	    <include name="*.jar" />
	  </fileset>
		
		<!-- Jnario bundles -->
		<fileset dir="${jnarioPluginFolder}" id="binJnarioJars">
			<include name="org.jnario_*.jar" />
			<include name="org.jnario.spec_*.jar" />
			<include name="org.jnario.suite_*.jar" />
			<include name="org.jnario.feature_*.jar" />
			<include name="org.jnario.lib_*.jar" />
			<include name="org.jnario.standalone_*.jar" />
		</fileset>

		<unzip dest="${binJarTemp}">
			<fileset refid="binJnarioJars" />
			<fileset refid="pegdownJars" />
		</unzip>

		<antcall target="cleanUpContent">
			<param name="contentDir" value="${binJarTemp}" />
		</antcall>
		
		<!-- EMF logs error if this property is not found -->
		<echo file="${binJarTemp}/plugin.properties">_UI_DiagnosticRoot_diagnostic=_UI_DiagnosticRoot_diagnostic</echo>
		<!-- Jar uber jar -->
		<jar destfile="${output.folder}/org.jnario.standalone-${maven.project.version}.jar" basedir="${binJarTemp}" />
	</target>


	<!-- ================================= 
	          target: createSourcesUberjar     Sources   
	         ================================= -->
	<target name="createSourcesUberjar" depends="createUberjar">


		<!-- Jnario bundles -->
		<fileset dir="${jnarioPluginFolder}" id="sourceXtextJars">
			<include name="org.jnario.source*.jar" />
			<include name="org.jnario.feature.source*.jar" />
			<include name="org.jnario.suite.source*.jar" />
			<include name="org.jnario.spec.source*.jar" />
			<include name="org.jnario.lib.source*.jar" />
			<include name="org.jnario.standalone.source*.jar" />
		</fileset>

		<unzip dest="${sourceJarTemp}" overwrite="true">
			<fileset refid="sourceXtextJars" />
			<fileset dir="${jnarioPluginFolder}">
				<include name="org.jnario.standalone.source*.jar" />
			</fileset>
		</unzip>

		<antcall target="cleanUpContent">
			<param name="contentDir" value="${sourceJarTemp}" />
		</antcall>

		<!-- Jar uber jar -->
		<jar destfile="${output.folder}/org.jnario.standalone-${maven.project.version}-sources.jar" basedir="${sourceJarTemp}">
			<exclude name="META-INF/*" />
		</jar>
		
		<jar destfile="${output.folder}/org.jnario.standalone-${maven.project.version}-javadoc.jar">
			<fileset file="README"/>
		</jar>
	</target>

	<!-- clean up equinox stuff, ecore file and some other -->
	<target name="cleanUpContent">
		<delete>
			<fileset dir="${contentDir}">
				<include name="about*" />
				<include name="**/*.jar" />
				<include name=".*" />
				<include name="plugin.*" />
				<include name="model" />
				<include name="modeling32.png" />
				<include name="**/*.ecore" />
				<include name="**/*.genmodel" />
				<include name="META-INF/**" />
				<include name="OSGI-INF" />
			</fileset>
		</delete>
		<delete dir="${contentDir}/about_files"/>
	</target>

</project>